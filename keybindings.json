[
  /*
   * General bindings
   */
  {
    "key": "ctrl+k ctrl+k",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "alt+k",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "alt+j",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+h",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+l",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+shift+n",
    "command": "explorer.newFolder"
  },
  /*
   * Add ctrl+k mapping for git actions and error/change jumping
   */
  {
    "key": "ctrl+k ctrl+d",
    "command": "git.openChange"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "git.cleanAll"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "git.commitAll"
  },
  {
    "key": "ctrl+k ctrl+p",
    "command": "git.push"
  },
  /*
   * Add alt mapping for resizing & focusing windows
   */
  {
    "key": "alt+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "alt+d",
    "command": "workbench.view.debug"
  },
  {
    "key": "alt+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.view.scm"
  },
  /*
   * Remove VSCode or VSCodeVim mappings
   */
  {
    "key": "ctrl+j",
    "command": "-extension.vim_ctrl+j",
    "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
  },
  {
    "key": "ctrl+c",
    "command": "-extension.vim_ctrl+c",
    "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
  },
  {
    "key": "ctrl+x",
    "command": "-extension.vim_ctrl+x",
    "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
  },
  {
    "key": "ctrl+v",
    "command": "-extension.vim_ctrl+v",
    "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "key": "ctrl+b",
    "command": "-extension.vim_ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+u",
    "command": "-list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "-extension.vim_ctrl+a",
    "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-extension.vim_ctrl+g",
    "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
  },
  /*
   * // Remove VSCode or VSCodeVim mappings
   */
  {
    "key": "shift+space",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "shift+alt+=",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+t ctrl+r",
    "command": "workbench.action.terminal.rename"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-notebook.cell.copyDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "-notebook.cell.copyUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+alt+j",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+alt+d",
    "command": "workbench.debug.action.toggleRepl",
    "when": "debuggersAvailable"
  },
  {
    "key": "ctrl+shift+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "debuggersAvailable"
  },
  {
    "key": "ctrl+k ctrl+e",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "workbench.scm.focus"
  },
  {
    "key": "shift+f9",
    "command": "workbench.debug.viewlet.action.removeAllBreakpoints"
  },
  {
    "key": "ctrl+k n",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+n",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+alt+r",
    "command": "-extension.convertToRGBA",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+k ctrl+v",
    "command": "toggleVim"
  },
  {
    "key": "ctrl+k ctrl+a",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+k ctrl+h",
    "command": "git-graph.view"
  },
  {
    "key": "ctrl+alt+i",
    "command": "bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+o",
    "command": "bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+j",
    "command": "extension.js-debug.createDebuggerTerminal"
  },
  {
    "key": "ctrl+k ctrl+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "ctrl+shift+t",
    "command": "-extension.toggleHEX",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+t",
    "command": "-extension.vim_ctrl+t",
    "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-notebook.cell.collapseCellInput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-notebook.cell.expandCellInput",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "-editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "git.revertSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+alt+up",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "shift+alt+down",
    "command": "workbench.action.decreaseViewSize"
  }
]
